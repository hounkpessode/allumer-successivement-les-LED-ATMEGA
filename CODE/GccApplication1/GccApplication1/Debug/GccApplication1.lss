
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000029c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000248  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002cc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000088c  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000697  00000000  00000000  00000bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d6  00000000  00000000  0000124f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001628  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b1  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000043c  00000000  00000000  000019fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00001e39  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 22 01 	jmp	0x244	; 0x244 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <util/delay.h>

int main(void)
{
	
	DDRB = 0xFF; 
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	84 b9       	out	0x04, r24	; 4
	DDRC = 0x00;
  84:	17 b8       	out	0x07, r1	; 7

	// Initialisation des ports
	PORTB = 0x00; // Port B à 0
  86:	15 b8       	out	0x05, r1	; 5
	PORTC |= (1 << 0);
  88:	40 9a       	sbi	0x08, 0	; 8
		{
				
		do {
			for (int j = 0; j <= 7; j++)
			{
				PORTB |= ( 1<<j);
  8a:	61 e0       	ldi	r22, 0x01	; 1
  8c:	70 e0       	ldi	r23, 0x00	; 0
		
			do {
			
			for (int i = 0; i <= 7; i++)
			{
				PORTB = (1 << i) | (1 << (7 - i));
  8e:	e7 e0       	ldi	r30, 0x07	; 7
  90:	f0 e0       	ldi	r31, 0x00	; 0
		
		do {
			
			for (int j = 0; j <= 7; j++)
			{
				PORTB = (1 << j);
  92:	ee 24       	eor	r14, r14
  94:	e3 94       	inc	r14
  96:	68 94       	set
  98:	ff 24       	eor	r15, r15
  9a:	f2 f8       	bld	r15, 2
  9c:	00 e1       	ldi	r16, 0x10	; 16
  9e:	10 e4       	ldi	r17, 0x40	; 64
		
		do {
			
			for (int j = 1; j <= 7; j++)
			{
				PORTB = (1 << j);
  a0:	d2 e0       	ldi	r29, 0x02	; 2
  a2:	c8 e0       	ldi	r28, 0x08	; 8
  a4:	b0 e2       	ldi	r27, 0x20	; 32
  a6:	a0 e8       	ldi	r26, 0x80	; 128
	PORTC |= (1 << 0);

	while (1)
	{
		// Lecture du bouton
		if ((PINC & (1 << 0)) == 0) 
  a8:	30 99       	sbic	0x06, 0	; 6
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <main+0x28>
		{
				
		do {
			for (int j = 0; j <= 7; j++)
  ac:	80 e0       	ldi	r24, 0x00	; 0
  ae:	90 e0       	ldi	r25, 0x00	; 0
			{
				PORTB |= ( 1<<j);
  b0:	45 b1       	in	r20, 0x05	; 5
  b2:	9b 01       	movw	r18, r22
  b4:	08 2e       	mov	r0, r24
  b6:	02 c0       	rjmp	.+4      	; 0xbc <main+0x3c>
  b8:	22 0f       	add	r18, r18
  ba:	33 1f       	adc	r19, r19
  bc:	0a 94       	dec	r0
  be:	e2 f7       	brpl	.-8      	; 0xb8 <main+0x38>
  c0:	24 2b       	or	r18, r20
  c2:	25 b9       	out	0x05, r18	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c4:	2f e9       	ldi	r18, 0x9F	; 159
  c6:	36 e8       	ldi	r19, 0x86	; 134
  c8:	41 e0       	ldi	r20, 0x01	; 1
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	30 40       	sbci	r19, 0x00	; 0
  ce:	40 40       	sbci	r20, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x4a>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x54>
  d4:	00 00       	nop
		// Lecture du bouton
		if ((PINC & (1 << 0)) == 0) 
		{
				
		do {
			for (int j = 0; j <= 7; j++)
  d6:	01 96       	adiw	r24, 0x01	; 1
  d8:	88 30       	cpi	r24, 0x08	; 8
  da:	91 05       	cpc	r25, r1
  dc:	49 f7       	brne	.-46     	; 0xb0 <main+0x30>
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	90 e0       	ldi	r25, 0x00	; 0
				
			}
		
			for (int j = 0; j <= 7; j++)
			{
				PORTB&=~( 1<<j);
  e2:	35 b1       	in	r19, 0x05	; 5
  e4:	ab 01       	movw	r20, r22
  e6:	08 2e       	mov	r0, r24
  e8:	02 c0       	rjmp	.+4      	; 0xee <main+0x6e>
  ea:	44 0f       	add	r20, r20
  ec:	55 1f       	adc	r21, r21
  ee:	0a 94       	dec	r0
  f0:	e2 f7       	brpl	.-8      	; 0xea <main+0x6a>
  f2:	24 2f       	mov	r18, r20
  f4:	20 95       	com	r18
  f6:	23 23       	and	r18, r19
  f8:	25 b9       	out	0x05, r18	; 5
  fa:	2f e9       	ldi	r18, 0x9F	; 159
  fc:	36 e8       	ldi	r19, 0x86	; 134
  fe:	41 e0       	ldi	r20, 0x01	; 1
 100:	21 50       	subi	r18, 0x01	; 1
 102:	30 40       	sbci	r19, 0x00	; 0
 104:	40 40       	sbci	r20, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x80>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x8a>
 10a:	00 00       	nop
				PORTB |= ( 1<<j);
				_delay_ms(500);
				
			}
		
			for (int j = 0; j <= 7; j++)
 10c:	01 96       	adiw	r24, 0x01	; 1
 10e:	88 30       	cpi	r24, 0x08	; 8
 110:	91 05       	cpc	r25, r1
 112:	39 f7       	brne	.-50     	; 0xe2 <main+0x62>
			{
				PORTB&=~( 1<<j);
				_delay_ms(500);
				
			}
		}while ((PINC & (1 << 0)) == 0);
 114:	30 9b       	sbis	0x06, 0	; 6
 116:	ca cf       	rjmp	.-108    	; 0xac <main+0x2c>
		
		PORTB=0x00;
 118:	15 b8       	out	0x05, r1	; 5
		
		
			do {
			
			for (int i = 0; i <= 7; i++)
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
			{
				PORTB = (1 << i) | (1 << (7 - i));
 11e:	9f 01       	movw	r18, r30
 120:	28 1b       	sub	r18, r24
 122:	39 0b       	sbc	r19, r25
 124:	ab 01       	movw	r20, r22
 126:	02 c0       	rjmp	.+4      	; 0x12c <main+0xac>
 128:	44 0f       	add	r20, r20
 12a:	55 1f       	adc	r21, r21
 12c:	2a 95       	dec	r18
 12e:	e2 f7       	brpl	.-8      	; 0x128 <main+0xa8>
 130:	9b 01       	movw	r18, r22
 132:	08 2e       	mov	r0, r24
 134:	02 c0       	rjmp	.+4      	; 0x13a <main+0xba>
 136:	22 0f       	add	r18, r18
 138:	33 1f       	adc	r19, r19
 13a:	0a 94       	dec	r0
 13c:	e2 f7       	brpl	.-8      	; 0x136 <main+0xb6>
 13e:	24 2b       	or	r18, r20
 140:	25 b9       	out	0x05, r18	; 5
 142:	2f e9       	ldi	r18, 0x9F	; 159
 144:	36 e8       	ldi	r19, 0x86	; 134
 146:	41 e0       	ldi	r20, 0x01	; 1
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	30 40       	sbci	r19, 0x00	; 0
 14c:	40 40       	sbci	r20, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0xc8>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0xd2>
 152:	00 00       	nop
		PORTB=0x00;
		
		
			do {
			
			for (int i = 0; i <= 7; i++)
 154:	01 96       	adiw	r24, 0x01	; 1
 156:	88 30       	cpi	r24, 0x08	; 8
 158:	91 05       	cpc	r25, r1
 15a:	09 f7       	brne	.-62     	; 0x11e <main+0x9e>
			{
				PORTB = (1 << i) | (1 << (7 - i));
				_delay_ms(500);
				}
				
				}while ((PINC & (1 << 0)) == 0);
 15c:	30 9b       	sbis	0x06, 0	; 6
 15e:	dd cf       	rjmp	.-70     	; 0x11a <main+0x9a>
			PORTB=0x00;
 160:	15 b8       	out	0x05, r1	; 5
		
		do {
			
			for (int j = 0; j <= 7; j++)
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	90 e0       	ldi	r25, 0x00	; 0
			{
				PORTB = (1 << j);
 166:	9b 01       	movw	r18, r22
 168:	08 2e       	mov	r0, r24
 16a:	02 c0       	rjmp	.+4      	; 0x170 <main+0xf0>
 16c:	22 0f       	add	r18, r18
 16e:	33 1f       	adc	r19, r19
 170:	0a 94       	dec	r0
 172:	e2 f7       	brpl	.-8      	; 0x16c <main+0xec>
 174:	25 b9       	out	0x05, r18	; 5
 176:	2f e9       	ldi	r18, 0x9F	; 159
 178:	36 e8       	ldi	r19, 0x86	; 134
 17a:	41 e0       	ldi	r20, 0x01	; 1
 17c:	21 50       	subi	r18, 0x01	; 1
 17e:	30 40       	sbci	r19, 0x00	; 0
 180:	40 40       	sbci	r20, 0x00	; 0
 182:	e1 f7       	brne	.-8      	; 0x17c <main+0xfc>
 184:	00 c0       	rjmp	.+0      	; 0x186 <main+0x106>
 186:	00 00       	nop
				}while ((PINC & (1 << 0)) == 0);
			PORTB=0x00;
		
		do {
			
			for (int j = 0; j <= 7; j++)
 188:	01 96       	adiw	r24, 0x01	; 1
 18a:	88 30       	cpi	r24, 0x08	; 8
 18c:	91 05       	cpc	r25, r1
 18e:	59 f7       	brne	.-42     	; 0x166 <main+0xe6>
			{
				PORTB = (1 << j);
				_delay_ms(500);
			}
			
		}while ((PINC & (1 << 0)) == 0);
 190:	30 9b       	sbis	0x06, 0	; 6
 192:	e7 cf       	rjmp	.-50     	; 0x162 <main+0xe2>
		PORTB=0x00;
 194:	15 b8       	out	0x05, r1	; 5
		
		do {
			
			for (int j = 0; j <= 7; j++)
			{
				PORTB = (1 << j);
 196:	e5 b8       	out	0x05, r14	; 5
 198:	8f e9       	ldi	r24, 0x9F	; 159
 19a:	96 e8       	ldi	r25, 0x86	; 134
 19c:	21 e0       	ldi	r18, 0x01	; 1
 19e:	81 50       	subi	r24, 0x01	; 1
 1a0:	90 40       	sbci	r25, 0x00	; 0
 1a2:	20 40       	sbci	r18, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <main+0x11e>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x128>
 1a8:	00 00       	nop
 1aa:	f5 b8       	out	0x05, r15	; 5
 1ac:	3f e9       	ldi	r19, 0x9F	; 159
 1ae:	46 e8       	ldi	r20, 0x86	; 134
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	31 50       	subi	r19, 0x01	; 1
 1b4:	40 40       	sbci	r20, 0x00	; 0
 1b6:	80 40       	sbci	r24, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <main+0x132>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x13c>
 1bc:	00 00       	nop
 1be:	05 b9       	out	0x05, r16	; 5
 1c0:	9f e9       	ldi	r25, 0x9F	; 159
 1c2:	26 e8       	ldi	r18, 0x86	; 134
 1c4:	31 e0       	ldi	r19, 0x01	; 1
 1c6:	91 50       	subi	r25, 0x01	; 1
 1c8:	20 40       	sbci	r18, 0x00	; 0
 1ca:	30 40       	sbci	r19, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0x146>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x150>
 1d0:	00 00       	nop
 1d2:	15 b9       	out	0x05, r17	; 5
 1d4:	4f e9       	ldi	r20, 0x9F	; 159
 1d6:	86 e8       	ldi	r24, 0x86	; 134
 1d8:	91 e0       	ldi	r25, 0x01	; 1
 1da:	41 50       	subi	r20, 0x01	; 1
 1dc:	80 40       	sbci	r24, 0x00	; 0
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <main+0x15a>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x164>
 1e4:	00 00       	nop
				j++;
				_delay_ms(500);
				
			}
			
		}while ((PINC & (1 << 0)) == 0);
 1e6:	30 9b       	sbis	0x06, 0	; 6
 1e8:	d6 cf       	rjmp	.-84     	; 0x196 <main+0x116>
		PORTB=0x00;
 1ea:	15 b8       	out	0x05, r1	; 5
		
		do {
			
			for (int j = 1; j <= 7; j++)
			{
				PORTB = (1 << j);
 1ec:	d5 b9       	out	0x05, r29	; 5
 1ee:	2f e9       	ldi	r18, 0x9F	; 159
 1f0:	36 e8       	ldi	r19, 0x86	; 134
 1f2:	41 e0       	ldi	r20, 0x01	; 1
 1f4:	21 50       	subi	r18, 0x01	; 1
 1f6:	30 40       	sbci	r19, 0x00	; 0
 1f8:	40 40       	sbci	r20, 0x00	; 0
 1fa:	e1 f7       	brne	.-8      	; 0x1f4 <main+0x174>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <main+0x17e>
 1fe:	00 00       	nop
 200:	c5 b9       	out	0x05, r28	; 5
 202:	8f e9       	ldi	r24, 0x9F	; 159
 204:	96 e8       	ldi	r25, 0x86	; 134
 206:	21 e0       	ldi	r18, 0x01	; 1
 208:	81 50       	subi	r24, 0x01	; 1
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	20 40       	sbci	r18, 0x00	; 0
 20e:	e1 f7       	brne	.-8      	; 0x208 <main+0x188>
 210:	00 c0       	rjmp	.+0      	; 0x212 <main+0x192>
 212:	00 00       	nop
 214:	b5 b9       	out	0x05, r27	; 5
 216:	3f e9       	ldi	r19, 0x9F	; 159
 218:	46 e8       	ldi	r20, 0x86	; 134
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	31 50       	subi	r19, 0x01	; 1
 21e:	40 40       	sbci	r20, 0x00	; 0
 220:	80 40       	sbci	r24, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0x19c>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x1a6>
 226:	00 00       	nop
 228:	a5 b9       	out	0x05, r26	; 5
 22a:	9f e9       	ldi	r25, 0x9F	; 159
 22c:	26 e8       	ldi	r18, 0x86	; 134
 22e:	31 e0       	ldi	r19, 0x01	; 1
 230:	91 50       	subi	r25, 0x01	; 1
 232:	20 40       	sbci	r18, 0x00	; 0
 234:	30 40       	sbci	r19, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <main+0x1b0>
 238:	00 c0       	rjmp	.+0      	; 0x23a <main+0x1ba>
 23a:	00 00       	nop
				j++;
				_delay_ms(500);
				
			}
			
		}while ((PINC & (1 << 0)) == 0);
 23c:	30 9b       	sbis	0x06, 0	; 6
 23e:	d6 cf       	rjmp	.-84     	; 0x1ec <main+0x16c>
		PORTB=0x00;
 240:	15 b8       	out	0x05, r1	; 5
 242:	32 cf       	rjmp	.-412    	; 0xa8 <main+0x28>

00000244 <_exit>:
 244:	f8 94       	cli

00000246 <__stop_program>:
 246:	ff cf       	rjmp	.-2      	; 0x246 <__stop_program>
